<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.myproject.adminuser.mapper.SysRoleDepartmentMapper" >
  <resultMap id="BaseResultMap" type="cn.com.myproject.adminuser.po.SysRoleDepartment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="VARCHAR" />
    <result column="creat_time" property="creatTime" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, department_id, creat_time, status, version
  </sql>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_role_department
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByDepartmentId" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT DISTINCT role_id,department_id, creat_time, status, version
    FROM sys_role_department
    where department_id =#{departmentId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from sys_role_department
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id ="deleteByRoleId" parameterType="string">
    DELETE FROM sys_role_department
    WHERE role_id=#{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.com.myproject.adminuser.po.SysRoleDepartment" >
    insert into sys_role_department (id, role_id, department_id, 
      creat_time, status, version
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR}, 
      #{creatTime,jdbcType=BIGINT}, #{status,jdbcType=BIT}, #{version,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.myproject.adminuser.po.SysRoleDepartment" >
    insert into sys_role_department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="creatTime != null" >
        creat_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null" >
        #{creatTime,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateSelective" parameterType="cn.com.myproject.adminuser.po.SysRoleDepartment" >
    update sys_role_department
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null" >
        creat_time = #{creatTime,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="update" parameterType="cn.com.myproject.adminuser.po.SysRoleDepartment" >
    update sys_role_department
    set role_id = #{roleId,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=BIGINT},
      status = #{status,jdbcType=BIT},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>